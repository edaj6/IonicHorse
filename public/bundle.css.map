{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\src\\components\\Card\\Card.svelte",
    "..\\src\\components\\Navbar\\SmallNavbar.svelte",
    "..\\src\\pages\\Login.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  export let img = \"https://cdn.pixabay.com/photo/2020/09/18/12/16/jewel-beetle-5581683_1280.jpg\";\r\n  export let likes = 0;\r\n  export let comments = 0;\r\n  export let lastchange = 0;\r\n\r\n  let lastChangeText = () => {\r\n    if (lastchange < 24)\r\n      return lastchange + \"h ago\"\r\n\r\n    if (lastchange < (24*365))\r\n      return parseInt(lastchange / 24) + \"d ago\"\r\n\r\n    return parseInt(lastchange / 24 / 365 ) + \"y ago\"\r\n  }\r\n\r\n//   let url_default =\r\n//     \"https://storagejakob.blob.core.windows.net/blob-container-test/default-horse.jpg\";\r\n</script>\r\n\r\n<style>\r\n  .missing {\r\n    color: #999;\r\n  }\r\n\r\n  /* On mouse-over, add a deeper shadow */\r\n  ion-card:hover {\r\n    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.8);\r\n  }\r\n\r\n  ion-icon {\r\n    margin-right: 3px;\r\n  }\r\n</style>\r\n\r\n<ion-card>\r\n  <img src={img} alt=\"avatar\" />\r\n\r\n  <ion-card-content>\r\n    <p>\r\n      <slot name=\"content\">\r\n        <p class=\"missing\">No content</p>\r\n      </slot>\r\n    </p>\r\n  </ion-card-content>\r\n\r\n  <ion-row>\r\n    <ion-col>\r\n      <ion-button icon-start fill=\"clear\" size=\"small\">\r\n        <ion-icon name=\"thumbs-up-outline\" />\r\n        <div>{likes} Likes</div>\r\n      </ion-button>\r\n    </ion-col>\r\n    <ion-col>\r\n      <ion-button icon-start fill=\"clear\" size=\"small\">\r\n        <ion-icon name=\"chatbubbles-outline\" />\r\n        <div>{comments} Comments</div>\r\n      </ion-button>\r\n    </ion-col>\r\n    <ion-col>\r\n      <ion-button icon-start fill=\"clear\" size=\"small\">\r\n        <ion-icon name=\"pulse-outline\" size=\"small\" />\r\n        <div>{lastChangeText()}</div>\r\n      </ion-button>\r\n    </ion-col>\r\n  </ion-row>\r\n\r\n</ion-card>\r\n",
    "<script>\r\n  import globalStore from \"../../stores/globalStore\";\r\n  import user from \"../../stores/user\";\r\n  import LoginButton from \"./../LoginButton.svelte\";\r\n\r\n  let openSidebar = globalStore.toggleItem;\r\n</script>\r\n<style>\r\n  ion-title{\r\n      text-transform: capitalize;\r\n  }\r\n</style>\r\n\r\n<ion-header>\r\n  <ion-toolbar mode=\"ios\">\r\n    <div class=\"nav-center\">\r\n      <!-- sidebar toggle -->\r\n      <button\r\n        class=\"btn-sidebar-toggle\"\r\n        aria-label=\"Sidebar Menu\"\r\n        on:click={() => {\r\n          openSidebar('sidebar', true);\r\n        }}>\r\n        <i class=\"fas fa-bars\" />\r\n      </button>\r\n      <ion-title>{$globalStore.selectedPage}</ion-title>\r\n\r\n      <ion-buttons slot=\"primary\">\r\n        <LoginButton />\r\n      </ion-buttons>\r\n    </div>\r\n\r\n  </ion-toolbar>\r\n</ion-header>\r\n",
    "<script>\r\n  import loginUser from \"../apis/loginUser\";\r\n  import registerUser from \"../apis/registerUser\";\r\n  import globalStore from \"../stores/globalStore\";\r\n  import { navigate } from \"svelte-routing\";\r\n\r\n  let email = \"\";\r\n  let password = \"\";\r\n  let username = \"default username\";\r\n  let isMember = true;\r\n\r\n// add alert\r\n  $: isEmpty = !email || !password || !username || $globalStore.alert;\r\n  // toggle member\r\n  function toggleMember() {\r\n    isMember = !isMember;\r\n    if (!isMember) {\r\n      username = \"\";\r\n    } else {\r\n      username = \"default username\";\r\n    }\r\n  }\r\n\r\n  // handle submit\r\n  async function handleSubmit() {\r\n    // add alert\r\n    globalStore.toggleItem(\"alert\", true, \"loading data... please wait!\");\r\n\r\n     console.log(\"ismember \" + isMember);\r\n\r\n    let isLoginSucces;\r\n    if (isMember) {\r\n      isLoginSucces = await loginUser({ email, password });\r\n    } else {\r\n      isLoginSucces = await registerUser({ email, password, username });\r\n    }\r\n\r\n    if (isLoginSucces) {\r\n      globalStore.toggleItem(\r\n        \"alert\",\r\n        true,\r\n        \"velkommen til, du er logget ind!\"\r\n      );\r\n\r\n      navigate(\"/about\");\r\n      return;\r\n    }\r\n\r\n    // add alert\r\n    globalStore.toggleItem(\r\n      \"alert\",\r\n      true,\r\n      \"forkert password eller email! please try again\",\r\n      true\r\n    );\r\n  }\r\n</script>\r\n<style>\r\n  .form{\r\n    border: 1px solid red;\r\n  }\r\n</style>\r\n\r\n<section class=\"form\">\r\n  <h2 class=\"section-title\">\r\n    {#if isMember}sign in{:else}register{/if}\r\n  </h2>\r\n  <form class=\"login-form\" on:submit|preventDefault={handleSubmit}>\r\n    <!-- single input -->\r\n    <div class=\"form-control\">\r\n      <label for=\"email\">email</label>\r\n      <input type=\"email\" id=\"email\" bind:value={email} />\r\n    </div>\r\n    <!--end of  single input -->\r\n    <!-- single input -->\r\n    <div class=\"form-control\">\r\n      <label for=\"password\">password</label>\r\n      <input type=\"password\" id=\"password\" bind:value={password} />\r\n    </div>\r\n    <!--end of  single input -->\r\n    {#if !isMember}\r\n      <!-- single input -->\r\n      <div class=\"form-control\">\r\n        <label for=\"username\">username</label>\r\n        <input type=\"text\" id=\"username\" bind:value={username} />\r\n      </div>\r\n      <!--end of  single input -->\r\n    {/if}\r\n    {#if isEmpty}\r\n      <p class=\"form-empty\">please fill out all form fields</p>\r\n    {/if}\r\n    <button\r\n      type=\"submit\"\r\n      class=\"btn btn-block btn-primary\"\r\n      disabled={isEmpty}\r\n      class:disabled={isEmpty}>\r\n      submit\r\n    </button>\r\n    {#if isMember}\r\n      <p class=\"register-link\">\r\n        need to register?\r\n        <button type=\"button\" on:click={toggleMember}>click here</button>\r\n      </p>\r\n    {:else}\r\n      <p class=\"register-link\">\r\n        already a member?\r\n        <button type=\"button\" on:click={toggleMember}>click here</button>\r\n      </p>\r\n    {/if}\r\n  </form>\r\n</section>"
  ],
  "names": [],
  "mappings": "AAqBE,QAAQ,cAAC,CAAC,AACR,KAAK,CAAE,IAAI,AACb,CAAC,AAGD,sBAAQ,MAAM,AAAC,CAAC,AACd,UAAU,CAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AAC7C,CAAC,AAED,QAAQ,cAAC,CAAC,AACR,YAAY,CAAE,GAAG,AACnB,CAAC;ACxBD,uBAAS,CAAC,AACN,cAAc,CAAE,UAAU,AAC9B,CAAC;ACgDD,mBAAK,CAAC,AACJ,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,GAAG,AACvB,CAAC"
}